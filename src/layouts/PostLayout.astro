---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro'

const { frontmatter } = Astro.props;

const monthNames = ["January", "February", "March", "April", "May", "June",
  "July", "August", "September", "October", "November", "December"
];

const pubDate = new Date(frontmatter.pubDate)
const dateString = monthNames[pubDate.getMonth()] + ' ' + pubDate.getDate() + ', ' + pubDate.getFullYear()
---

<Layout title={ frontmatter.title }>
	<div id="background" class="alt">
		<main>
			<Header />

            <div class="showcase">
				{ frontmatter.image && <img src={frontmatter.image.url} alt={frontmatter.image.alt} /> }
				<p>{dateString}</p>
				<h1>{frontmatter.title}</h1>
			</div>
            
            <article>
				<slot />
			</article>

			<hr />

			<footer>
				<code>CheryX 2024</code>
			</footer>

		</main>
	</div>
</Layout>

<style>
	.showcase {
		text-align: center;
		margin-top: 4em;
	}

	.showcase > img {
		width: 100%;
		margin: 3em 0;
	}

	.showcase > h1, .showcase > p {
		margin: .4em 0;
	}

	.showcase > p {
		opacity: 0.5;
	}

	article {
		margin: 4em 0;
	}

</style>

<style is:global>

	.line-number {
		display: inline-block;
		width: 2em; /* Adjust width as needed */
		text-align: right;
		margin-right: 2em; /* Adjust margin as needed */
		color: #4c535a; /* Adjust color as needed */
	}

	/* CSS for pre element */
	pre {
		position: relative;
	}

</style>

<script>
// Get all pre elements with the class "astro-code"
const preElements: NodeListOf<HTMLPreElement> = document.querySelectorAll('pre.astro-code');

// Loop through each pre element
preElements.forEach((preElement: HTMLPreElement) => {
    // Get the code element inside the pre element
    const codeElement: HTMLElement | null = preElement.querySelector('code');
    
    if (codeElement) {
        // Get all the lines of code inside the code element
        const lines: NodeListOf<HTMLSpanElement> = codeElement.querySelectorAll('.line');
        
        // Loop through each line and add line numbers
        lines.forEach((line: HTMLSpanElement, index: number) => {
            // Create a span element for the line number
            const lineNumber: HTMLSpanElement = document.createElement('span');
            lineNumber.classList.add('line-number');
            lineNumber.textContent = (index + 1).toString();
            
            // Append the line number to the line
            line.prepend(lineNumber);
        });
    }
});

</script>